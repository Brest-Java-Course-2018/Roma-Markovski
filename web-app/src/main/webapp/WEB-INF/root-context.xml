<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd">

    <import resource="sample-db-spring.xml"/>

    <context:component-scan base-package="com.epam.brest.course.web_app.*"/>

    <bean id="namedParameterJdbcTemplate"
          class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="departmentDao" class="com.epam.brest.course.dao.DepartmentDaoImpl">
        <constructor-arg ref="namedParameterJdbcTemplate"/>
    </bean>

    <!--<bean id="departmentService" class="com.epam.brest.course.service.DepartmentServiceImpl">-->
        <!--<constructor-arg ref="departmentDao"/>-->
    <!--</bean>-->

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <bean id="departmentService" class="com.epam.brest.course.client.rest.DepartmentConsumerRest">
        <constructor-arg index="0" value="${protocol}://${host}:${port}/${point.departments}"/>
        <constructor-arg index="1" ref="restTemplate"/>
    </bean>

    <mvc:default-servlet-handler/>

    <mvc:annotation-driven/>

    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <bean id="employeeDao" class="com.epam.brest.course.dao.EmployeeDaoImpl">
        <constructor-arg name="namedParameterJdbcTemplate" ref="namedParameterJdbcTemplate"/>
    </bean>

    <bean id="employeeService" class="com.epam.brest.course.service.EmployeeServiceImpl">
        <constructor-arg ref="employeeDao"/>
    </bean>

    <bean id="validator"
          class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
    </bean>

    <bean id="templateResolver" class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/templates/" />
        <property name="suffix" value=".html" />
        <property name="templateMode" value="HTML" />
    </bean>

    <bean id="templateEngine"
          class="org.thymeleaf.spring4.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"/>
    </bean>

    <bean id="viewResolver"
          class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine"/>
        <property name="characterEncoding" value="UTF-8" />
    </bean>

    <!--<context:property-placeholder location="classpath:application.properties"/>-->

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:sql-properties.properties</value>
                <value>classpath:application.properties</value>
                <value>classpath:rest.properties</value>
            </list>
        </property>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>
</beans>
